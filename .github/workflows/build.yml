# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  SONARR_MAJOR_VERSION: 4
  VERSION: 4.0.0

jobs:
  build_backend:
    runs-on: windows-latest
    steps:
    - name: Check out
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3

    - name: Setup Environment Variables
      shell: bash
      run: |
        DOTNET_VERSION=$(jq -r '.sdk.version' global.json)
        echo "SDK_PATH=${{ env.DOTNET_ROOT }}/sdk/${DOTNET_VERSION}" >> "$GITHUB_ENV"
        echo "SONARR_VERSION=${{ env.VERSION }}.${{ github.run_number }}" >> "$GITHUB_ENV"

    - name: Enable Extra Platforms In SDK
      shell: bash
      run: ./build.sh --enable-extra-platforms-in-sdk

    - name: Build Backend
      shell: bash
      run: ./build.sh --backend --enable-extra-platforms --packages

    # Test Artifacts

    - name: Publish win-x64 Test Artifact
      uses: ./.github/actions/publish-test-artifact
      with:
        runtime: win-x64

    - name: Publish linux-x64 Test Artifact
      uses: ./.github/actions/publish-test-artifact
      with:
        runtime: linux-x64

    - name: Publish osx-x64 Test Artifact
      uses: ./.github/actions/publish-test-artifact
      with:
        runtime: osx-x64

    # Build Artifacts
    
    - name: Publish Backend Artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend
        path: _artifacts/**/*

    # Distribution Artifact
    
    - name: Publish Distribution Artifact
      uses: actions/upload-artifact@v4
      with:
        name: distribution
        path: distribution/**/*

  build_frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v3

    - name: Volta
      uses: volta-cli/action@v4

    - name: Yarn Intsall
      run: yarn install

    - name: Lint
      run: yarn lint

    - name: Stylelint
      run: yarn stylelint

    - name: Build
      run: yarn build --env production

    - name: Publish UI Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ui
        path: _output/UI/**/*
