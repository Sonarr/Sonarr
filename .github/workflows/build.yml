# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  DOTNET_VERSION: 6.0.405
  SOLUTION_FILE: src/Sonarr.sln

jobs:
  build_backend:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{env.DOTNET_VERSION}}
    - name: Dotnet Version
      run: dotnet --version
    - name: Enable Extra Platforms In SDK
      shell: bash
      run: |
        BUNDLEDVERSIONS="${{env.DOTNET_ROOT}}/sdk/${DOTNET_VERSION}/Microsoft.NETCoreSdk.BundledVersions.props"
          echo "$BUNDLEDVERSIONS"
          if grep -q freebsd-x64 "$BUNDLEDVERSIONS"; then
            echo "Extra platforms already enabled"
          else
            echo "Enabling extra platform support"
            sed -i.ORI 's/osx-x64/osx-x64;freebsd-x64;linux-x86/' "$BUNDLEDVERSIONS"
          fi
    - name: Enable Extra Platforms
      shell: bash
      run: |
        if grep -qv freebsd-x64 src/Directory.Build.props; then
          sed -i'' -e "s^<RuntimeIdentifiers>\(.*\)</RuntimeIdentifiers>^<RuntimeIdentifiers>\1;freebsd-x64;linux-x86</RuntimeIdentifiers>^g" src/Directory.Build.props
        fi
    - name: Dotnet Version Before Build
      run: dotnet --version
    - name: Build Backend
      run: dotnet msbuild -restore ${{env.SOLUTION_FILE}} -p:Configuration=Release -p:Platform=Windows -t:PublishAllRids
