# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  BRANCH: ${{ github.head_ref || github.ref_name }} 
  SONARR_MAJOR_VERSION: 4
  VERSION: 4.0.0

jobs:
  backend:
    runs-on: windows-latest
    steps:
    - name: Check out
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3

    - name: Setup Environment Variables
      shell: bash
      run: |
        echo "Run ID: ${{ github.run_id }}"
        DOTNET_VERSION=$(jq -r '.sdk.version' global.json)
        echo "SDK_PATH=${{ env.DOTNET_ROOT }}/sdk/${DOTNET_VERSION}" >> "$GITHUB_ENV"
        echo "SONARR_VERSION=${{ env.VERSION }}.${{ github.run_number }}" >> "$GITHUB_ENV"

    - name: Enable Extra Platforms In SDK
      shell: bash
      run: ./build.sh --enable-extra-platforms-in-sdk

    - name: Build Backend
      shell: bash
      run: ./build.sh --backend --enable-extra-platforms --packages

    # Test Artifacts

    - name: Publish win-x64 Test Artifact
      uses: ./.github/actions/publish-test-artifact
      with:
        runtime: win-x64

    - name: Publish linux-x64 Test Artifact
      uses: ./.github/actions/publish-test-artifact
      with:
        runtime: linux-x64

    - name: Publish osx-x64 Test Artifact
      uses: ./.github/actions/publish-test-artifact
      with:
        runtime: osx-x64

    # Build Artifacts (grouped by OS)
    
    - name: Publish FreeBSD Artifact
      uses: actions/upload-artifact@v4
      with:
        name: freebsd
        path: _artifacts/freebsd-*/**/*
    - name: Publish Linux Artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux
        path: _artifacts/linux-*/**/*
    - name: Publish macOS Artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos
        path: _artifacts/osx-*/**/*
    - name: Publish Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows
        path: _artifacts/win-*/**/*

  frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v3

    - name: Volta
      uses: volta-cli/action@v4

    - name: Yarn Intsall
      run: yarn install

    - name: Lint
      run: yarn lint

    - name: Stylelint
      run: yarn stylelint

    - name: Build
      run: yarn build --env production

    - name: Publish UI Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ui
        path: _output/UI/**/*

  unit_test:
    needs: backend
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact: tests-linux-x64
            filter: TestCategory!=ManualTest&TestCategory!=WINDOWS&TestCategory!=IntegrationTest&TestCategory!=AutomationTest
          - os: macos-latest
            artifact: tests-osx-x64
            filter: TestCategory!=ManualTest&TestCategory!=WINDOWS&TestCategory!=IntegrationTest&TestCategory!=AutomationTest
          - os: windows-latest
            artifact: tests-win-x64
            filter: TestCategory!=ManualTest&TestCategory!=LINUX&TestCategory!=IntegrationTest&TestCategory!=AutomationTest
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out
      uses: actions/checkout@v3

    - name: Test
      uses: ./.github/actions/test
      with:
        os: ${{ matrix.os }}
        artifact: ${{ matrix.artifact }}
        pattern: Sonarr.*.Test.dll
        filter: ${{ matrix.filter }}

  unit_test_postgres:
    needs: backend
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v3

    - name: Test
      uses: ./.github/actions/test
      with:
        os: ubuntu-latest
        artifact: tests-linux-x64
        pattern: Sonarr.*.Test.dll
        filter: TestCategory!=ManualTest&TestCategory!=WINDOWS&TestCategory!=IntegrationTest&TestCategory!=AutomationTest
        use_postgres: true

  integration_test:
    needs: backend
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact: tests-linux-x64
            filter: TestCategory!=ManualTest&TestCategory!=WINDOWS&TestCategory=IntegrationTest
            binary_artifact: linux
            binary_path: linux-x64/net6.0/Sonarr
          - os: macos-latest
            artifact: tests-osx-x64
            filter: TestCategory!=ManualTest&TestCategory!=WINDOWS&TestCategory=IntegrationTest
            binary_artifact: macos
            binary_path: osx-x64/net6.0/Sonarr
          - os: windows-latest
            artifact: tests-win-x64
            filter: TestCategory!=ManualTest&TestCategory=WINDOWS&TestCategory=IntegrationTest
            binary_artifact: windows
            binary_path: win-x64/net6.0/Sonarr
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out
      uses: actions/checkout@v3

    - name: Test
      uses: ./.github/actions/test
      with:
        os: ${{ matrix.os }}
        artifact: ${{ matrix.artifact }}
        pattern: Sonarr.*.Test.dll
        filter: ${{ matrix.filter }}
        integration_tests: true
        binary_artifact: ${{ matrix.binary_artifact }}
        binary_path: ${{ matrix.binary_path }}
  
  deploy:
    if: ${{ github.ref_name == 'develop' || github.ref_name == 'main' }}
    uses: ./.github/workflows/deploy.yml
    with:
      branch: ${{ github.ref_name }}
      version: ${{ env.SONARR_VERSION }}
