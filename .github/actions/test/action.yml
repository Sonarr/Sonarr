# https://docs.github.com/en/actions/creating-actions/creating-a-composite-action

name: Run test on DLLs matching the specified pattern
description: Runs unit/integration tests

inputs:
  use_postgres:
    description: 'Whether postgres should be used for the database'
  os:
    description: 'OS that the tests are running on'
    required: true
  artifact:
    description: 'Test binary artifact'
    required: true
  pattern:
    description: 'Pattern for DLLs'
    required: true
  filter:
    description: 'Filter for tests'
    required: true
  integation_tests:
    description: 'True if running integration tests'
  binary_artifact:
    description: 'Binary artifact for integration tests'
  binary_path:
    description: 'Path witin binary artifact for integration tests'

runs:
  using: 'composite'
  steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v3

    - name: Setup Postgres
      if: ${{ inputs.use_postgres }}
      uses: ikalnytskyi/action-setup-postgres@v4

    - name: Setup Environment Variables
      if: ${{ inputs.use_postgres }}
      shell: bash
      run: |
        echo "Sonarr__Postgres__Host=localhost" >> "$GITHUB_ENV"
        echo "Sonarr__Postgres__Port=5432" >> "$GITHUB_ENV"
        echo "Sonarr__Postgres__User=postgres" >> "$GITHUB_ENV"
        echo "Sonarr__Postgres__Password=postgres" >> "$GITHUB_ENV"

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact }}
        path: _tests

    - name: Download Binary Artifact
      if: ${{ inputs.binary_artifact }} != ''
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.binary_artifact }}
        path: _artifacts

    - name: Set up binary artifact
      if: ${{ inputs.binary_path != '' }}
      shell: bash
      run: mv ${{inputs.binary_path}} _tests/bin

    - name: Make executable
      if: startsWith(inputs.os, 'windows') != true
      shell: bash
      run: chmod +x ./_tests/Sonarr.Test.Dummy && chmod +x ./_tests/ffprobe

    - name: Make Sonarr binary executable
      if: ${{ inputs.integation_tests && !startsWith(inputs.os, 'windows') }}
      shell: bash
      run: chmod +x ./_tests/bin/Sonarr

    - name: Run tests
      shell: bash
      run: dotnet test ./_tests/Sonarr.*.Test.dll --filter "${{ inputs.filter }}" --logger trx --results-directory "${{ inputs.integration_tests && 'integation_' || 'unit_' }}${{ inputs.artifact }}"
